// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  name          String
  age           Int?
  gender        String?
  role          UserRole  @default(CUSTOMER)
  points        Int       @default(0)
  orders        Order[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Restaurant {
  id            String    @id @default(uuid())
  name          String
  description   String?
  address       String
  products      Product[]
  orders        Order[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Product {
  id            String    @id @default(uuid())
  name          String
  description   String?
  price         Float
  category      String
  calories      Int?
  protein       Float?
  carbs         Float?
  fat           Float?
  allergens     String[]
  ingredients   String[]
  restaurantId  String
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  orderItems    OrderItem[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Order {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  restaurantId  String
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  items         OrderItem[]
  status        OrderStatus @default(PENDING)
  totalAmount   Float
  specialNotes  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model OrderItem {
  id            String    @id @default(uuid())
  orderId       String
  order         Order     @relation(fields: [orderId], references: [id])
  productId     String
  product       Product   @relation(fields: [productId], references: [id])
  quantity      Int
  price         Float
  specialNotes  String?
}

enum UserRole {
  ADMIN
  RESTAURANT_OWNER
  CUSTOMER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY
  DELIVERED
  CANCELLED
} 